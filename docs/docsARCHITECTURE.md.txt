# –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```mermaid
graph TD
    A[–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] --> B[Telegram]
    B --> C[–ë–æ—Ç]
    C --> D[FFmpeg]
    C --> E[SpeechRecognition]
    D --> F[–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ WAV]
    E --> G[Google Speech API]
    G --> H[–¢–µ–∫—Å—Ç]
    H --> C
    C --> B


### 4. `src/bot.py` (–æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ –±–æ—Ç–∞)
```python
import os
import asyncio
import speech_recognition as sr
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import CommandStart
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
load_dotenv()
TOKEN = os.getenv('BOT_TOKEN')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(TOKEN)
dp = Dispatcher()
recognizer = sr.Recognizer()

@dp.message(CommandStart())
async def start(message: types.Message):
    await message.answer("üé§ –ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª, –∏ —è –ø—Ä–µ–æ–±—Ä–∞–∑—É—é –µ–≥–æ –≤ —Ç–µ–∫—Å—Ç!")

@dp.message(F.voice | F.audio)
async def handle_audio(message: types.Message):
    try:
        # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        if message.voice:
            file_id = message.voice.file_id
            ext = ".ogg"
        else:
            file_id = message.audio.file_id
            ext = os.path.splitext(message.audio.file_name)[1]
        
        file_path = f"temp_audio{ext}"
        await bot.download(file_id, destination=file_path)
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ WAV
        wav_path = "temp_audio.wav"
        os.system(f'ffmpeg -i "{file_path}" "{wav_path}"')
        
        # –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
        with sr.AudioFile(wav_path) as source:
            audio = recognizer.record(source)
            text = recognizer.recognize_google(audio, language='ru-RU')
        
        await message.reply(f"üîç –¢–µ–∫—Å—Ç:\n\n{text}")
    
    except Exception as e:
        await message.reply(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
    
    finally:
        # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        if os.path.exists(file_path): os.remove(file_path)
        if os.path.exists(wav_path): os.remove(wav_path)

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())